
一、注释
    1、注释的作用
        通过用自己熟悉的语言，在程序中对某些代码进行标注说明，这就是注释的作用，能够大大增强程序的可读性

    2. 注释的分类
        <1> 单行注释
        以#开头，#右边的所有东西当做说明，而不是真正要执行的程序，起辅助说明作用
            # 我是注释，可以在里写一些功能说明之类的哦

        <2> 多行注释
            '''
                我是多行注释，可以写很多很多行的功能说明
            '''
    <3> python程序中，中文支持
        python3中，是默认支持中文的，但是在python2中就需要一定的额外操作才可以
        python2中，如果直接在程序中用到了中文，比如
        print('你好')
        如果直接运行输出，程序会出错：

        解决的办法为：在程序的开头写入如下代码，这就是中文注释
        #coding=utf-8

        修改之后的程序:
            #coding=utf-8
            print('你好')

            运行结果:
            你好

二、变量及类型
    1、变量的定义
    在程序中，有时我们需要对2个数据进行求和，那么该怎样做呢？
        大家类比一下现实生活中，比如去超市买东西，往往咱们需要一个菜篮子，用来进行存储物品，等到所有的物品都购买完成后，在收银台进行结账即可
        如果在程序中，需要把2个数据，或者多个数据进行求和的话，那么就需要把这些数据先存储起来，然后把它们累加起来即可
    说明:
        所谓变量，可以理解为菜篮子，如果需要存储多个数据，最简单的方式是有多个变量，当然了也可以使用一个
        程序就是用来处理数据的，而变量就是用来存储数据的

    2、变量的类型
         |               |int(有符号整数)
         |               |long(长整型[也可以代表八进制和十六进制])
         |numbers(数字) <|float(浮点型)
         |               |complex(复数)
         |
         |               |True
         |布尔类型      <|False
         |
        <|String(字符串)
         |
         |List(列表)
         |
         |Tuple(元组)
         |
         |Dictionary(字典)

    3、怎样知道一个变量的类型呢？
        在python中，只要定义了一个变量，而且它有数据，那么它的类型就已经确定了，不需要咱们开发者主动的去说明它的类型，系统会自动辨别
        可以使用type(变量的名字)，来查看变量的类型

三、标识符
    1、什么是标识符
        开发人员在程序中自定义的一些符号和名称
        标识符是自己定义的,如变量名 、函数名等
    2、标识符的规则
        标识符由字母、下划线和数字组成，且数字不能开头
        python中的标识符是区分大小写的
    3、命名规则
        1、见名知意
            起一个有意义的名字，尽量做到看一眼就知道是什么意思(提高代码可 读性) 比如: 名字 就定义为 name , 定义学生 用 student
        2、驼峰命名法
            小驼峰式命名法（lower camel case）：
                第一个单词以小写字母开始；第二个单词的首字母大写，例如：myName、aDog
            大驼峰式命名法（upper camel case）：
                每一个单字的首字母都采用大写字母，例如：FirstName、LastName

        3、还有一种命名法是用下划线“_”来连接所有的单词，比如send_buf，
        Python的命令规则遵循PEP8标准。
    4、关键字
        1、什么是关键字
            python一些具有特殊功能的标识符，这就是所谓的关键字
            关键字，是python已经使用的了，所以不允许开发者自己定义和关键字相同的名字的标识符
        2、查看关键字
            and     as      assert     break     class      continue    def     del
            elif    else    except     exec      finally    for         from    global
            if      in      import     is        lambda     not         or      pass
            print   raise   return     try       while      with        yield
        可以在Python Shell通过以下命令进行查看当前系统中python的关键字
            >>> import keyword
            >>> keyword.kwlist
