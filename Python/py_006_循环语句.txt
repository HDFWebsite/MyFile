
循环语句
    1、循环介绍
        while和if的用法基本类似，区别在于：if 条件成立，则执行一次； while 条件成立，则重复执行，直到条件不成立为止。
        一般情况下，需要多次重复执行的代码，都可以用循环的方式来完成
        循环不是必须要使用的，但是为了提高代码的重复使用率，所以有经验的开发者都会采用循环
    2、while循环
        <1>while循环的格式
            while 条件:
                条件满足时，做的事情1
                条件满足时，做的事情2
                条件满足时，做的事情3
                ...(省略)...
    3、while循环应用
        1. 计算1~100的累积和（包含1和100）
        参考代码如下:
            #encoding=utf-8
            i = 1
            sum = 0
            while i <= 100:
                sum = sum + i
                i += 1
            print("1~100的累积和为:%d" % sum)
        2. 计算1~100之间偶数的累积和（包含1和100）
        参考代码如下:
            #encoding=utf-8
            i = 1
            sum = 0
            while i <= 100:
                if i % 2 == 0:
                    sum = sum + i
                i+=1
            print("1~100的累积和为:%d" % sum)
    4、while循环嵌套
        类似if的嵌套，while嵌套就是：while里面还有while
        <1>while嵌套的格式
            while 条件1:
                条件1满足时，做的事情1
                条件1满足时，做的事情2
                条件1满足时，做的事情3
                ...(省略)...
                while 条件2:
                    条件2满足时，做的事情1
                    条件2满足时，做的事情2
                    条件2满足时，做的事情3
                    ...(省略)...
        <2>while嵌套应用一
        要求：打印如下图形：
            *
            * *
            * * *
            * * * *
            * * * * *
        参考代码：
            i = 1
            while i <= 5:
                j = 1
                while j <= i:
                    print("* ", end = '')
                    j += 1
                print("\n")
                i += 1
        <3>while嵌套应用二：九九乘法表
        参考代码：
            i = 1
            while i<=9:
                j=1
                while j<=i:
                    print("%d*%d=%-2d " % (j, i, i*j), end = '')
                    j+=1
                print('\n')
                i+=1
    5、for循环
        像while循环一样，for可以完成循环的功能。
        在Python中 for循环可以遍历任何序列的项目，如一个列表或者一个字符串等。
        for循环的格式：
            for 临时变量 in 列表或者字符串等可迭代对象:
                循环满足条件时执行的代码
        例子：
            name = 'itheima'
            for x in name:
                print(x)