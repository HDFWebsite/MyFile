一、引用(一)
    引用
        在python中，值是靠引用来传递来的。
        我们可以用id()来判断两个变量是否为同一个值的引用。 我们可以将id值理解为那块内存的地址标示。
        >>> a = 1
        >>> b = a
        >>> id(a)
        13033816
        >>> id(b)   # 注意两个变量的id值相同
        13033816
        >>> a = 2
        >>> id(a)   # 注意a的id值已经变了
        13033792
        >>> id(b)   # b的id值依旧
        13033816
        >>> a = [1, 2]
        >>> b = a
        >>> id(a)
        139935018544808
        >>> id(b)
        139935018544808
        >>> a.append(3)
        >>> a
        [1, 2, 3]
        >>> id(a)
        139935018544808
        >>> id(b)       # 注意a与b始终指向同一个地址
        139935018544808
    总结：
        之前为了更好的理解变量，咱们可以把a=100理解为变量a中存放了100，事实上变量a存储是100的引用（可理解为在内存中的一个编号）
二、引用(二)
    引用当做实参
        def test1(b):  # 变量b一定是一个局部变量，就看它指向的是谁？可变还是不可变
            b += b  # += 是直接对b指向的空间进行修改,而不是让b指向一个新的
            # b = b+b  # xx = xx+yyy 先把=号右边的结果计算出来,然后让b指向这个新的地方,不管原来b指向谁
                        # 现在b一定指向这个新的地方
        # a = [11, 22]
        a = 100
        test1(a)
        print(a)
    总结：
        Python中函数参数是引用传递（注意不是值传递）
        对于不可变类型，因变量不能修改，所以运算不会影响到变量自身
        而对于可变类型来说，函数体中的运算有可能会更改传入的参数变量

三、可变、不可变类型
    所谓可变类型与不可变类型是指：数据能够直接进行修改，如果能直接修改那么就是可变，否则是不可变
    可变类型有： 列表、字典、集合
    不可变类型有： 数字、字符串、元组

四、函数使用注意事项
    1. 自定义函数
        无参数、无返回值
            def 函数名():
                语句
        无参数、有返回值
            def 函数名():
                语句
                return 需要返回的数值
        注意:
            一个函数到底有没有返回值，就看有没有return，因为只有return才可以返回数据
            在开发中往往根据需求来设计函数需不需要返回值
            函数中，可以有多个return语句，但是只要执行到一个return语句，那么就意味着这个函数的调用完成
        有参数、无返回值
            def 函数名(形参列表):
                语句
        注意：
            在调用函数时，如果需要把一些数据一起传递过去，被调用函数就需要用参数来接收
            参数列表中变量的个数根据实际传递的数据的多少来确定
        有参数、有返回值
            def 函数名(形参列表):
                语句
                return 需要返回的数值
        函数名不能重复
            如果在同一个程序中出现了多个相同函数名的函数，那么在调用函数时就会出现问题，所以要避免名字相同
            还有一点 不仅要避免函数名之间不能相同，还要避免 变量名和函数名相同的，否则都会出现问题
    2. 调用函数
        调用的方式为：
            函数名([实参列表])
            调用时，到底写不写 实参
            如果调用的函数 在定义时有形参，那么在调用的时候就应该传递参数
            调用时，实参的个数和先后顺序应该和定义函数中要求的一致
            如果调用的函数有返回值，那么就可以用一个变量来进行保存这个值
    3. 作用域
        在一个函数中定义的变量，只能在本函数中用(局部变量)
        在函数外定义的变量，可以在所有的函数中使用(全局变量)